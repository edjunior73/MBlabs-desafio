datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByRelation"]
}

model User {
  id         String      @id @default(uuid())
  name       String
  password   String
  photoUrl   String?     @map("photo_url")
  birthday   DateTime
  cpf        String      @unique
  email      String      @unique
  isVerified Boolean     @map("is_verified")
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @default(now()) @updatedAt @map("updated_at")
  categories Category[]  @relation("User_Category")
  events     UserEvent[]

  @@map("users")
}

model Category {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  users       User[]   @relation("User_Category")
  events      Event[]

  @@map("categories")
}

model EventMaker {
  id          String   @id @default(uuid())
  name        String
  description String?
  cnpj        String   @unique
  photoUrl    String?  @map("photo_url")
  password    String
  email       String   @unique
  isVerified  Boolean  @map("is_verified")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  events      Event[]

  @@map("event_makers")
}

model Event {
  id          String     @id @default(uuid())
  name        String     @unique
  description String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String     @map("category_id")
  place       String
  date        DateTime   @default(now())
  isPaid      Boolean    @map("is_paid")
  eventMaker  EventMaker @relation(fields: [ownerId], references: [id])
  ownerId     String     @map("owner_id")
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at")
  tickets     Ticket[]

  @@map("events")
}

model Ticket {
  id          String      @id @default(uuid())
  price       Float
  count       Int?
  event       Event       @relation(fields: [eventId], references: [id])
  eventId     String      @map("event_id")
  name        String
  description String?
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @default(now()) @updatedAt @map("updated_at")
  events      UserEvent[]

  @@map("tickets")
}

model UserEvent {
  user      User     @relation(fields: [userId], references: [id])
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  userId    String   @map("user_id")
  ticketId  String   @map("ticket_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@id([userId, ticketId])
  @@map("user_events")
}
